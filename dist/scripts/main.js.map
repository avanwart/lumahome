{"version":3,"sources":["../assets/scripts/main.js"],"names":["$","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","Sage","common","init","click","location","pathname","replace","hostname","target","hash","length","slice","animate","scrollTop","offset","top","magnificPopup","disableOn","type","mainClass","removalDelay","preloader","fixedContentPos","window","scroll","addClass","removeClass","on","e","preventDefault","toggleClass","finalize","home","surround_wifi","controller","ScrollMagic","Controller","trigEl","document","querySelector","tween","TweenMax","staggerFromTo","scale","opacity","transformOrigin","setDevicesAnimation","Scene","triggerElement","triggerHook","duration","setTween","addTo","x","repeat","$devicesLoveLumaEl","devicesSVG","find","css","width","fromTo","ease","Linear","easeNone","resize","features","stickUp","scrollHide","fixedClass","slick","dots","arrows","autoplay","autoplaySpeed","prevArrow","nextArrow","appendArrows","fade","adaptiveHeight","speed","slide","asNavFor","UTIL","fire","funcname","namespace","undefined","loadEvents","each","body","className","split","i","classnm","ready","jQuery"],"mappings":"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","file":"main.js","sourcesContent":["/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  /*\n    helpers\n  */\n\n  function debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  };\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n\n        // Smooth scroll\n        // ref - https://css-tricks.com/snippets/jquery/smooth-scrolling/\n        $('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n          if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\n            var target = $(this.hash);\n            target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n            if (target.length) {\n              $('html, body').animate({\n                scrollTop: target.offset().top\n              }, 1000);\n              return false;\n            }\n          }\n        });\n\n        $('.js-youtube-popup').magnificPopup({\n          disableOn: 700,\n          type: 'iframe',\n          mainClass: 'is-active',\n          removalDelay: 160,\n          preloader: false,\n          fixedContentPos: false\n        });\n\n        // Add border to navigation bar on scroll\n        $(window).scroll(function() {\n            var scroll = $(window).scrollTop();\n            if (scroll > 0) {\n              $('.top-bar').addClass('is-bordered');\n            } else {\n              $('.top-bar').removeClass('is-bordered');\n            }\n        });\n        // mobile navigation functionality\n        $('.top-bar__menu-button').on('click', function(e) {\n          e.preventDefault();\n          $('.top-bar').toggleClass('is-open');\n        })\n\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    'surround_wifi': {\n      init: function() {\n        // JavaScript to be fired on the Surround WiFi page\n\n        var controller  = new ScrollMagic.Controller();\n        var trigEl = document.querySelector('.home-models');\n        var tween = TweenMax.staggerFromTo(\n          $('.model .model__coverage'),\n          1,\n          {scale: 0.25, opacity: 0, transformOrigin:\"50% 50%\"},\n          {scale: 1, opacity: 1},\n          0.2\n        );\n        var scene = new ScrollMagic.Scene({\n            triggerElement: trigEl,\n            triggerHook: 0.75,\n            duration: '50%'\n          })\n          .setTween(tween)\n          .addTo(controller);\n\n        var cloudsTween = TweenMax.staggerFromTo($('.graphic-clouds .graphic-clouds__cloud'), 6, {opacity: 1}, {opacity: 0, x: '-100px', repeat: -1}, 0.5);\n\n        var setDevicesAnimation = function() {\n          var $devicesLoveLumaEl = $('.devices-love-luma__devices');\n          var devicesSVG = $devicesLoveLumaEl.find('img');\n\n          $devicesLoveLumaEl.css('width', 2 + devicesSVG.width() * devicesSVG.length);\n\n          var devicesTween = TweenMax.fromTo(\n            devicesSVG,\n            30, // duration (s) per loop\n            {x:0}, // from Attributes\n            {x: -devicesSVG.width(), repeat: -1, ease:Linear.easeNone} // to Attributes\n          );\n        };\n        setDevicesAnimation();\n        $(window).resize( debounce(function(){\n          setDevicesAnimation();\n        }, 250, false));\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    'features': {\n      init: function() {\n        // Set up sticky navigation that sticks when you scroll to it\n        // e.g. [\"SPEED\", \"SECURITY\", \"CONTROL\"] nav\n        $('.js-sticky-nav').stickUp({\n          scrollHide: false,\n          fixedClass: 'is-stuck'\n        });\n        // Set up Control sliders\n        $('.control-slider--screenshot').slick({\n          dots: false,\n          arrows: true,\n          autoplay: true,\n          autoplaySpeed: 7500,\n          prevArrow: '<a href=\"#\" class=\"control__nav control__nav--prev\"><div class=\"control__nav__image\"></div></a>',\n          nextArrow: '<a href=\"#\" class=\"control__nav control__nav--next\"><div class=\"control__nav__image\"></div></a>',\n          appendArrows: $('.control'),\n          fade: true,\n          adaptiveHeight: true,\n          speed: 500,\n          slide: '.control-slider__image',\n          asNavFor: '.control-slider--text'\n        });\n        // Bind ready event to screenshot element\n        $('.control-slider--text').on('init', function(){\n          $('.control').removeClass('is-not-loaded');\n        });\n        $('.control-slider--text').slick({\n          dots: false,\n          arrows: false,\n          fade: true,\n          speed: 500,\n          slide: '.control-slider__copy',\n          asNavFor: '.control-slider--screenshot'\n        });\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}